{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MDT\\\\IdeaProjects\\\\solar-panel-monitoring-system\\\\front\\\\src\\\\components\\\\ControlPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlPanel = ({\n  stompClient,\n  connected\n}) => {\n  _s();\n  const [command, setCommand] = useState(\"\");\n  const [panelId, setPanelId] = useState(\"panel-1\");\n  const [message, setMessage] = useState(\"\");\n  const sendCommand = () => {\n    if (!connected || !stompClient) {\n      setMessage(\"Not connected to WebSocket\");\n      return;\n    }\n    const payload = {\n      panelId,\n      command,\n      timestamp: new Date().toISOString()\n    };\n    stompClient.publish({\n      destination: \"/app/sensor-data\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    setMessage(`Command \"${command}\" sent to ${panelId}`);\n    setCommand(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"panelId\",\n        children: \"Panel ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"panelId\",\n        value: panelId,\n        onChange: e => setPanelId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"panel-1\",\n          children: \"Panel 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"panel-2\",\n          children: \"Panel 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"panel-3\",\n          children: \"Panel 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"command\",\n        children: \"Command:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"command\",\n        value: command,\n        onChange: e => setCommand(e.target.value),\n        placeholder: \"e.g., turn_off, reset, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendCommand,\n      disabled: !connected,\n      children: \"Send Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ControlPanel, \"bCDxZtYQ3xU/K+LcskIXiKiCdSw=\");\n_c = ControlPanel;\nexport default ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ControlPanel","stompClient","connected","_s","command","setCommand","panelId","setPanelId","message","setMessage","sendCommand","payload","timestamp","Date","toISOString","publish","destination","body","JSON","stringify","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","type","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/MDT/IdeaProjects/solar-panel-monitoring-system/front/src/components/ControlPanel.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ControlPanel = ({ stompClient, connected }) => {\r\n    const [command, setCommand] = useState(\"\");\r\n    const [panelId, setPanelId] = useState(\"panel-1\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const sendCommand = () => {\r\n        if (!connected || !stompClient) {\r\n            setMessage(\"Not connected to WebSocket\");\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            panelId,\r\n            command,\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        stompClient.publish({\r\n            destination: \"/app/sensor-data\",\r\n            body: JSON.stringify(payload),\r\n            headers: { \"content-type\": \"application/json\" },\r\n        });\r\n\r\n        setMessage(`Command \"${command}\" sent to ${panelId}`);\r\n        setCommand(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"control-panel\">\r\n            <h3>Control Panel</h3>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"panelId\">Panel ID:</label>\r\n                <select\r\n                    id=\"panelId\"\r\n                    value={panelId}\r\n                    onChange={(e) => setPanelId(e.target.value)}\r\n                >\r\n                    <option value=\"panel-1\">Panel 1</option>\r\n                    <option value=\"panel-2\">Panel 2</option>\r\n                    <option value=\"panel-3\">Panel 3</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"command\">Command:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"command\"\r\n                    value={command}\r\n                    onChange={(e) => setCommand(e.target.value)}\r\n                    placeholder=\"e.g., turn_off, reset, etc.\"\r\n                />\r\n            </div>\r\n            <button onClick={sendCommand} disabled={!connected}>\r\n                Send Command\r\n            </button>\r\n            {message && <div className=\"message\">{message}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}