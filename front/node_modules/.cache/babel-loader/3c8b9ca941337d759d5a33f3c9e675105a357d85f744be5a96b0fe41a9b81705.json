{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MDT\\\\IdeaProjects\\\\solar-panel-monitoring-system\\\\front\\\\src\\\\components\\\\auth\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport UserService from '../service/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// children: This is the content (e.g., Navbar, routes) wrapped inside the AuthProvider.\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem('role') === 'ADMIN');\n\n  // Refresh authentication state\n  const refreshAuthState = () => {\n    setIsAuthenticated(UserService.isAuthenticated());\n    setIsAdmin(UserService.isAdmin());\n  };\n  useEffect(() => {\n    refreshAuthState(); // Initial authentication check\n  }, []);\n  return (\n    /*#__PURE__*/\n    // AuthContext.Provider: Makes the context values available to all child components.\n    // (isAuthenticated, isAdmin, refreshAuthState)\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        isAuthenticated,\n        isAdmin,\n        refreshAuthState\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AuthProvider, \"3l34W9FdnExDefpAVGWl1vDrHlY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","UserService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","isAdmin","setIsAdmin","refreshAuthState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MDT/IdeaProjects/solar-panel-monitoring-system/front/src/components/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport UserService from '../service/UserService';\n\nexport const AuthContext = createContext();\n\n\n// children: This is the content (e.g., Navbar, routes) wrapped inside the AuthProvider.\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n    const [isAdmin, setIsAdmin] = useState(localStorage.getItem('role') === 'ADMIN');\n    \n    // Refresh authentication state\n    const refreshAuthState = () => {\n        setIsAuthenticated(UserService.isAuthenticated());\n        setIsAdmin(UserService.isAdmin());\n    };\n\n    useEffect(() => {\n        refreshAuthState(); // Initial authentication check\n    }, []);\n\n    return (\n        // AuthContext.Provider: Makes the context values available to all child components.\n        // (isAuthenticated, isAdmin, refreshAuthState)\n        <AuthContext.Provider value={{ isAuthenticated, isAdmin, refreshAuthState }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAG1C;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAK,OAAO,CAAC;;EAEhF;EACA,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC3BL,kBAAkB,CAACR,WAAW,CAACO,eAAe,CAAC,CAAC,CAAC;IACjDK,UAAU,CAACZ,WAAW,CAACW,OAAO,CAAC,CAAC,CAAC;EACrC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZc,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACI;IACA;IACAX,OAAA,CAACC,WAAW,CAACW,QAAQ;MAACC,KAAK,EAAE;QAAER,eAAe;QAAEI,OAAO;QAAEE;MAAiB,CAAE;MAAAR,QAAA,EACvEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;AAE/B,CAAC;AAACb,EAAA,CArBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}