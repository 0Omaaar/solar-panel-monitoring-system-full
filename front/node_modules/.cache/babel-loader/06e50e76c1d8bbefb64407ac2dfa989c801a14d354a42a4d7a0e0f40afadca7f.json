{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nconst useWebSocket = (url, topics, onMessage) => {\n  _s();\n  const [stompClient, setStompClient] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const client = new Client({\n      brokerURL: url,\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      debug: function (str) {\n        console.log(\"STOMP: \", str);\n      }\n    });\n    client.onConnect = () => {\n      setConnected(true);\n      setError(null);\n      topics.forEach(topic => {\n        client.subscribe(topic, message => {\n          onMessage(message);\n        });\n      });\n    };\n    client.onStompError = frame => {\n      setError(`Broker reported error: ${frame.headers.message}`);\n      console.error(\"STOMP error:\", frame);\n    };\n    client.onWebSocketError = event => {\n      setError(\"WebSocket connection error\");\n      console.error(\"WebSocket error:\", event);\n    };\n    client.onWebSocketClose = () => {\n      setConnected(false);\n      setError(\"WebSocket connection closed\");\n    };\n    client.activate();\n    setStompClient(client);\n    return () => {\n      if (client && connected) {\n        client.deactivate();\n      }\n    };\n  }, [url, JSON.stringify(topics)]);\n  return {\n    stompClient,\n    connected,\n    error\n  };\n};\n_s(useWebSocket, \"URO5O0Lm+UZzQtJXh/1Sj1wnF2w=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useState","Client","useWebSocket","url","topics","onMessage","_s","stompClient","setStompClient","connected","setConnected","error","setError","client","brokerURL","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","debug","str","console","log","onConnect","forEach","topic","subscribe","message","onStompError","frame","headers","onWebSocketError","event","onWebSocketClose","activate","deactivate","JSON","stringify"],"sources":["C:/Users/MDT/IdeaProjects/solar-panel-monitoring-system/front/src/hooks/useWebSocket.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst useWebSocket = (url, topics, onMessage) => {\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [connected, setConnected] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const client = new Client({\r\n            brokerURL: url,\r\n            reconnectDelay: 5000,\r\n            heartbeatIncoming: 4000,\r\n            heartbeatOutgoing: 4000,\r\n            debug: function (str) {\r\n                console.log(\"STOMP: \", str);\r\n            },\r\n        });\r\n\r\n        client.onConnect = () => {\r\n            setConnected(true);\r\n            setError(null);\r\n            topics.forEach((topic) => {\r\n                client.subscribe(topic, (message) => {\r\n                    onMessage(message);\r\n                });\r\n            });\r\n        };\r\n\r\n        client.onStompError = (frame) => {\r\n            setError(`Broker reported error: ${frame.headers.message}`);\r\n            console.error(\"STOMP error:\", frame);\r\n        };\r\n\r\n        client.onWebSocketError = (event) => {\r\n            setError(\"WebSocket connection error\");\r\n            console.error(\"WebSocket error:\", event);\r\n        };\r\n\r\n        client.onWebSocketClose = () => {\r\n            setConnected(false);\r\n            setError(\"WebSocket connection closed\");\r\n        };\r\n\r\n        client.activate();\r\n        setStompClient(client);\r\n\r\n        return () => {\r\n            if (client && connected) {\r\n                client.deactivate();\r\n            }\r\n        };\r\n    }, [url, JSON.stringify(topics)]);\r\n\r\n    return { stompClient, connected, error };\r\n};\r\n\r\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMc,MAAM,GAAG,IAAIZ,MAAM,CAAC;MACtBa,SAAS,EAAEX,GAAG;MACdY,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,KAAK,EAAE,SAAAA,CAAUC,GAAG,EAAE;QAClBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG,CAAC;MAC/B;IACJ,CAAC,CAAC;IAEFN,MAAM,CAACS,SAAS,GAAG,MAAM;MACrBZ,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MACdR,MAAM,CAACmB,OAAO,CAAEC,KAAK,IAAK;QACtBX,MAAM,CAACY,SAAS,CAACD,KAAK,EAAGE,OAAO,IAAK;UACjCrB,SAAS,CAACqB,OAAO,CAAC;QACtB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;IAEDb,MAAM,CAACc,YAAY,GAAIC,KAAK,IAAK;MAC7BhB,QAAQ,CAAC,0BAA0BgB,KAAK,CAACC,OAAO,CAACH,OAAO,EAAE,CAAC;MAC3DN,OAAO,CAACT,KAAK,CAAC,cAAc,EAAEiB,KAAK,CAAC;IACxC,CAAC;IAEDf,MAAM,CAACiB,gBAAgB,GAAIC,KAAK,IAAK;MACjCnB,QAAQ,CAAC,4BAA4B,CAAC;MACtCQ,OAAO,CAACT,KAAK,CAAC,kBAAkB,EAAEoB,KAAK,CAAC;IAC5C,CAAC;IAEDlB,MAAM,CAACmB,gBAAgB,GAAG,MAAM;MAC5BtB,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,6BAA6B,CAAC;IAC3C,CAAC;IAEDC,MAAM,CAACoB,QAAQ,CAAC,CAAC;IACjBzB,cAAc,CAACK,MAAM,CAAC;IAEtB,OAAO,MAAM;MACT,IAAIA,MAAM,IAAIJ,SAAS,EAAE;QACrBI,MAAM,CAACqB,UAAU,CAAC,CAAC;MACvB;IACJ,CAAC;EACL,CAAC,EAAE,CAAC/B,GAAG,EAAEgC,IAAI,CAACC,SAAS,CAAChC,MAAM,CAAC,CAAC,CAAC;EAEjC,OAAO;IAAEG,WAAW;IAAEE,SAAS;IAAEE;EAAM,CAAC;AAC5C,CAAC;AAACL,EAAA,CApDIJ,YAAY;AAsDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}